# setting worker_processes to CPU core count
worker_processes      1;
daemon off;

events {
  worker_connections  1024;
}

http {
  include             mime.types;
  default_type        application/octet-stream;
  sendfile            on;
  server_tokens       off;
  keepalive_timeout   65;
  gzip                on;
  access_log          on;
  error_log           logs/error.log;
  proxy_max_temp_file_size  0;
  #fastcgi_max_temp_file_size 0;
  limit_conn_zone $binary_remote_addr zone=phplimit:1m; # define a limit bucket for PHP-FPM
  # don't use server listen port in redirects.
  port_in_redirect off;

  # set $https only when SSL is actually used.
  map $http_x_forwarded_proto $my_https {
    default off;
    https on;
  }

  upstream php_fpm {
    server unix:/tmp/php-fpm.socket;
  }

  root              /vagrant/;
  index             index.php index.html index.htm;

  server {
    listen            <%= ENV['PORT'] %>;
    server_name       holdmyticket.loc;

    # Some basic cache-control for static files to be sent to the browser
    location ~* \.(?:ico|css|js|gif|jpeg|jpg|png)$ {
      expires         max;
      add_header      Pragma public;
      add_header      Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Deny hidden files (.htaccess, .htpasswd, .DS_Store).
    location ~ /\. {
      deny            all;
      access_log      off;
      log_not_found   off;
    }

    # Deny /favicon.ico
    location = /favicon.ico {
      access_log      off;
      log_not_found   off;
    }

    # Deny /robots.txt
    location = /robots.txt {
      allow           all;
      log_not_found   off;
      access_log      off;
    }

    # Status. /status.html uses /status
    location ~ ^/(status|ping)$ {
      include         fastcgi_params;
      fastcgi_param   HTTPS $my_https if_not_empty;
      fastcgi_pass    php_fpm;
      fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }

    location /server-status {
      stub_status on;
      access_log   off;
    }

    #location / {
    #  # wordpress fancy rewrites
    #  if (-f $request_filename) {
    #    break;
    #  }
    #  if (-d $request_filename) {
    #    break;
    #  }

    #  rewrite         ^(.+)$ /index.php?q=$1 last;

    #  # Add trailing slash to */wp-admin requests.
    #  rewrite         /wp-admin$ $scheme://$host$uri/ permanent;

    #  # redirect to feedburner.
    #  # if ($http_user_agent !~ FeedBurner) {
    #  #   rewrite ^/feed/?$ http://feeds.feedburner.com/feedburner-feed-id last;
    #  # }
    #}

    include /app/conf/nginx.d/*.conf;

    location ~ .*\.php$ {
      try_files $uri =404;
      limit_conn phplimit 5; # limit to 5 concurrent users to PHP per IP.
      include         fastcgi_params;
      fastcgi_param   HTTPS $my_https if_not_empty;
      fastcgi_pass    php_fpm;
      fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
    
    location / {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /index.php last;break;
      }
    }

    location ~ /api {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /api.php?/$1 last;break;
      }
    }
    location ~ /boxoffice {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /boxoffice.php?/$1 last;break;
      }
    }
    location ~ /boards {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /boards.php?/$1 last;break;
      }
    }
    location ~ /checkout {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /checkout.php?/$1 last;break;
      }
    }
    location ~ /eTicket {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /eTicket.php?/$1 last;break;
      }
    }
    location ~ /feeds2 {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2.php?/$1 last;break;
      }
    }
    location ~ /buy {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /buy.php?/$1 last;break;
      }
    }
    location ~ /event {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /event.php?/$1 last;break;
      }
    }
    location ~ /event_tracker {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /event_tracker.php?/$1 last;break;
      }
    }
    location ~ /help {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /help.php?/$1 last;break;
      }
    }
    location ~ /mobile {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /mobile.php?/$1 last;break;
      }
    }
    location ~ /news {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /news.php?/$1 last;break;
      }
    }
    location ~ /seating_charts {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /seating_charts.php?/$1 last;break;
      }
    }
    location ~ /sell {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /sell.php?/$1 last;break;
      }
    }
    location ~ /staff {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /staff.php?/$1 last;break;
      }
    }
    location ~ /widgets {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /widgets.php?/$1 last;break;
      }
    }
    location ~ /venue {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /venue.php?/$1 last;break;
      }
    }
    location ~ /user {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /user.php?/$1 last;break;
      }
    }
    location ^~ /venues/tools {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /venues/?scn=tools&/$1 last;break;
      }
    }
    location ~ /rss {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2/events/rss/$1 last;break;
      }
    }
    location ~ /rss_user {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2/events/rss_user/$1 last;break;
      }
    }
    location ~ /ics {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2/events/ics/$1 last;break;
      }
    }
    location ~ /ics_user {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2/events/ics_user/$1 last;break;
      }
    }
    location ~ /ics_single {
      if (!-e $request_filename){
        rewrite ^/(.*)$ /feeds2/events/ics_single/$1 last;break;
      }
    }
    
    rewrite ^/min/([a-z]=.*) /min/index.php?$1 last;

    location ^~ /apps/console/ {
      deny all;
      return 404;
    }

    location ^~ /apps/cronjobs/ {
      deny all;
      return 404;
    }

  }
}
